// Code generated by go-swagger; DO NOT EDIT.

package get_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariadb-corporation/skysql-api-go/v2/nos/models"
)

// GetNotificationsV1SubscribersSubscriberIDNotificationsReader is a Reader for the GetNotificationsV1SubscribersSubscriberIDNotifications structure.
type GetNotificationsV1SubscribersSubscriberIDNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNotificationsV1SubscribersSubscriberIDNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNotificationsV1SubscribersSubscriberIDNotificationsOK creates a GetNotificationsV1SubscribersSubscriberIDNotificationsOK with default headers values
func NewGetNotificationsV1SubscribersSubscriberIDNotificationsOK() *GetNotificationsV1SubscribersSubscriberIDNotificationsOK {
	return &GetNotificationsV1SubscribersSubscriberIDNotificationsOK{}
}

/* GetNotificationsV1SubscribersSubscriberIDNotificationsOK describes a response with status code 200, with default header values.

OK
*/
type GetNotificationsV1SubscribersSubscriberIDNotificationsOK struct {

	/* Page token to fetch next page
	 */
	XSkySQLPageTokenNext string

	/* Page token to fetch previous page
	 */
	XSkySQLPageTokenPrevious string

	Payload []*models.DtoNotification
}

func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsOK) Error() string {
	return fmt.Sprintf("[GET /notifications/v1/subscribers/{subscriber_id}/notifications][%d] getNotificationsV1SubscribersSubscriberIdNotificationsOK  %+v", 200, o.Payload)
}
func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsOK) GetPayload() []*models.DtoNotification {
	return o.Payload
}

func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-SkySQL-Page-Token-Next
	hdrXSkySQLPageTokenNext := response.GetHeader("X-SkySQL-Page-Token-Next")

	if hdrXSkySQLPageTokenNext != "" {
		o.XSkySQLPageTokenNext = hdrXSkySQLPageTokenNext
	}

	// hydrates response header X-SkySQL-Page-Token-Previous
	hdrXSkySQLPageTokenPrevious := response.GetHeader("X-SkySQL-Page-Token-Previous")

	if hdrXSkySQLPageTokenPrevious != "" {
		o.XSkySQLPageTokenPrevious = hdrXSkySQLPageTokenPrevious
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized creates a GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized with default headers values
func NewGetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized() *GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized {
	return &GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized{}
}

/* GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized struct {
	Payload *models.ErrrErrorResponse
}

func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /notifications/v1/subscribers/{subscriber_id}/notifications][%d] getNotificationsV1SubscribersSubscriberIdNotificationsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *GetNotificationsV1SubscribersSubscriberIDNotificationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
