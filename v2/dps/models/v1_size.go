// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1Size v1 size
//
// swagger:model v1.Size
type V1Size struct {

	// cpu
	CPU string `json:"cpu,omitempty"`

	// created on
	CreatedOn string `json:"created_on,omitempty"`

	// display name
	DisplayName string `json:"display_name,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is active
	IsActive bool `json:"is_active,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// provider
	Provider string `json:"provider,omitempty"`

	// ram
	RAM string `json:"ram,omitempty"`

	// service type
	ServiceType string `json:"service_type,omitempty"`

	// tier
	Tier string `json:"tier,omitempty"`

	// updated on
	UpdatedOn string `json:"updated_on,omitempty"`
}

// Validate validates this v1 size
func (m *V1Size) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 size based on context it is used
func (m *V1Size) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1Size) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Size) UnmarshalBinary(b []byte) error {
	var res V1Size
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
