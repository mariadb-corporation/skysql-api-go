// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1Provider v1 provider
//
// swagger:model v1.Provider
type V1Provider struct {

	// active
	Active bool `json:"active,omitempty"`

	// display name
	DisplayName string `json:"display_name,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// iops min
	IopsMin int64 `json:"iops_min,omitempty"`

	// iops per gb
	IopsPerGb int64 `json:"iops_per_gb,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// volume size max gb
	VolumeSizeMaxGb int64 `json:"volume_size_max_gb,omitempty"`

	// volume size min gb
	VolumeSizeMinGb int64 `json:"volume_size_min_gb,omitempty"`
}

// Validate validates this v1 provider
func (m *V1Provider) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 provider based on context it is used
func (m *V1Provider) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1Provider) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Provider) UnmarshalBinary(b []byte) error {
	var res V1Provider
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
