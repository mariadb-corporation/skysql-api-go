// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1SetStorageIOPSRequest Storage IOPs and volume type
//
// swagger:model v1.SetStorageIOPSRequest
type V1SetStorageIOPSRequest struct {

	// Input/output operations per second
	// Minimum / Maximum IOPs depend on the size of the disk and volume type.
	Iops int64 `json:"iops,omitempty"`

	// Type of the EBS volume. Can be gp2, gp3, io1 or io2
	// Enum: [gp2 gp3 io1 io2]
	VolumeType string `json:"volume_type,omitempty"`
}

// Validate validates this v1 set storage i o p s request
func (m *V1SetStorageIOPSRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVolumeType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1SetStorageIOPSRequestTypeVolumeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["gp2","gp3","io1","io2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1SetStorageIOPSRequestTypeVolumeTypePropEnum = append(v1SetStorageIOPSRequestTypeVolumeTypePropEnum, v)
	}
}

const (

	// V1SetStorageIOPSRequestVolumeTypeGp2 captures enum value "gp2"
	V1SetStorageIOPSRequestVolumeTypeGp2 string = "gp2"

	// V1SetStorageIOPSRequestVolumeTypeGp3 captures enum value "gp3"
	V1SetStorageIOPSRequestVolumeTypeGp3 string = "gp3"

	// V1SetStorageIOPSRequestVolumeTypeIo1 captures enum value "io1"
	V1SetStorageIOPSRequestVolumeTypeIo1 string = "io1"

	// V1SetStorageIOPSRequestVolumeTypeIo2 captures enum value "io2"
	V1SetStorageIOPSRequestVolumeTypeIo2 string = "io2"
)

// prop value enum
func (m *V1SetStorageIOPSRequest) validateVolumeTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1SetStorageIOPSRequestTypeVolumeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1SetStorageIOPSRequest) validateVolumeType(formats strfmt.Registry) error {
	if swag.IsZero(m.VolumeType) { // not required
		return nil
	}

	// value enum
	if err := m.validateVolumeTypeEnum("volume_type", "body", m.VolumeType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 set storage i o p s request based on context it is used
func (m *V1SetStorageIOPSRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1SetStorageIOPSRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SetStorageIOPSRequest) UnmarshalBinary(b []byte) error {
	var res V1SetStorageIOPSRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
