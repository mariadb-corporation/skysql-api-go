// Code generated by go-swagger; DO NOT EDIT.

package offering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariadb-corporation/skysql-api-go/v2/dps/models"
)

// GetProvisioningV1TopologiesReader is a Reader for the GetProvisioningV1Topologies structure.
type GetProvisioningV1TopologiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProvisioningV1TopologiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProvisioningV1TopologiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProvisioningV1TopologiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProvisioningV1TopologiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetProvisioningV1TopologiesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProvisioningV1TopologiesOK creates a GetProvisioningV1TopologiesOK with default headers values
func NewGetProvisioningV1TopologiesOK() *GetProvisioningV1TopologiesOK {
	return &GetProvisioningV1TopologiesOK{}
}

/* GetProvisioningV1TopologiesOK describes a response with status code 200, with default header values.

OK
*/
type GetProvisioningV1TopologiesOK struct {
	Payload []*models.V1Topology
}

func (o *GetProvisioningV1TopologiesOK) Error() string {
	return fmt.Sprintf("[GET /provisioning/v1/topologies][%d] getProvisioningV1TopologiesOK  %+v", 200, o.Payload)
}
func (o *GetProvisioningV1TopologiesOK) GetPayload() []*models.V1Topology {
	return o.Payload
}

func (o *GetProvisioningV1TopologiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProvisioningV1TopologiesBadRequest creates a GetProvisioningV1TopologiesBadRequest with default headers values
func NewGetProvisioningV1TopologiesBadRequest() *GetProvisioningV1TopologiesBadRequest {
	return &GetProvisioningV1TopologiesBadRequest{}
}

/* GetProvisioningV1TopologiesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetProvisioningV1TopologiesBadRequest struct {
	Payload *models.ErrrErrorResponse
}

func (o *GetProvisioningV1TopologiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /provisioning/v1/topologies][%d] getProvisioningV1TopologiesBadRequest  %+v", 400, o.Payload)
}
func (o *GetProvisioningV1TopologiesBadRequest) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *GetProvisioningV1TopologiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProvisioningV1TopologiesUnauthorized creates a GetProvisioningV1TopologiesUnauthorized with default headers values
func NewGetProvisioningV1TopologiesUnauthorized() *GetProvisioningV1TopologiesUnauthorized {
	return &GetProvisioningV1TopologiesUnauthorized{}
}

/* GetProvisioningV1TopologiesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProvisioningV1TopologiesUnauthorized struct {
	Payload *models.ErrrErrorResponse
}

func (o *GetProvisioningV1TopologiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /provisioning/v1/topologies][%d] getProvisioningV1TopologiesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetProvisioningV1TopologiesUnauthorized) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *GetProvisioningV1TopologiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProvisioningV1TopologiesInternalServerError creates a GetProvisioningV1TopologiesInternalServerError with default headers values
func NewGetProvisioningV1TopologiesInternalServerError() *GetProvisioningV1TopologiesInternalServerError {
	return &GetProvisioningV1TopologiesInternalServerError{}
}

/* GetProvisioningV1TopologiesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetProvisioningV1TopologiesInternalServerError struct {
	Payload *models.ErrrErrorResponse
}

func (o *GetProvisioningV1TopologiesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /provisioning/v1/topologies][%d] getProvisioningV1TopologiesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetProvisioningV1TopologiesInternalServerError) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *GetProvisioningV1TopologiesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
