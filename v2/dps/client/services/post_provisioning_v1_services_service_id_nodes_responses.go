// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariadb-corporation/skysql-api-go/v2/dps/models"
)

// PostProvisioningV1ServicesServiceIDNodesReader is a Reader for the PostProvisioningV1ServicesServiceIDNodes structure.
type PostProvisioningV1ServicesServiceIDNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProvisioningV1ServicesServiceIDNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostProvisioningV1ServicesServiceIDNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostProvisioningV1ServicesServiceIDNodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostProvisioningV1ServicesServiceIDNodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostProvisioningV1ServicesServiceIDNodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostProvisioningV1ServicesServiceIDNodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostProvisioningV1ServicesServiceIDNodesOK creates a PostProvisioningV1ServicesServiceIDNodesOK with default headers values
func NewPostProvisioningV1ServicesServiceIDNodesOK() *PostProvisioningV1ServicesServiceIDNodesOK {
	return &PostProvisioningV1ServicesServiceIDNodesOK{}
}

/* PostProvisioningV1ServicesServiceIDNodesOK describes a response with status code 200, with default header values.

OK
*/
type PostProvisioningV1ServicesServiceIDNodesOK struct {
	Payload *models.V1ServiceNodesState
}

func (o *PostProvisioningV1ServicesServiceIDNodesOK) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services/{service_id}/nodes][%d] postProvisioningV1ServicesServiceIdNodesOK  %+v", 200, o.Payload)
}
func (o *PostProvisioningV1ServicesServiceIDNodesOK) GetPayload() *models.V1ServiceNodesState {
	return o.Payload
}

func (o *PostProvisioningV1ServicesServiceIDNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServiceNodesState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesServiceIDNodesBadRequest creates a PostProvisioningV1ServicesServiceIDNodesBadRequest with default headers values
func NewPostProvisioningV1ServicesServiceIDNodesBadRequest() *PostProvisioningV1ServicesServiceIDNodesBadRequest {
	return &PostProvisioningV1ServicesServiceIDNodesBadRequest{}
}

/* PostProvisioningV1ServicesServiceIDNodesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostProvisioningV1ServicesServiceIDNodesBadRequest struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesServiceIDNodesBadRequest) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services/{service_id}/nodes][%d] postProvisioningV1ServicesServiceIdNodesBadRequest  %+v", 400, o.Payload)
}
func (o *PostProvisioningV1ServicesServiceIDNodesBadRequest) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesServiceIDNodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesServiceIDNodesUnauthorized creates a PostProvisioningV1ServicesServiceIDNodesUnauthorized with default headers values
func NewPostProvisioningV1ServicesServiceIDNodesUnauthorized() *PostProvisioningV1ServicesServiceIDNodesUnauthorized {
	return &PostProvisioningV1ServicesServiceIDNodesUnauthorized{}
}

/* PostProvisioningV1ServicesServiceIDNodesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostProvisioningV1ServicesServiceIDNodesUnauthorized struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesServiceIDNodesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services/{service_id}/nodes][%d] postProvisioningV1ServicesServiceIdNodesUnauthorized  %+v", 401, o.Payload)
}
func (o *PostProvisioningV1ServicesServiceIDNodesUnauthorized) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesServiceIDNodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesServiceIDNodesNotFound creates a PostProvisioningV1ServicesServiceIDNodesNotFound with default headers values
func NewPostProvisioningV1ServicesServiceIDNodesNotFound() *PostProvisioningV1ServicesServiceIDNodesNotFound {
	return &PostProvisioningV1ServicesServiceIDNodesNotFound{}
}

/* PostProvisioningV1ServicesServiceIDNodesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostProvisioningV1ServicesServiceIDNodesNotFound struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesServiceIDNodesNotFound) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services/{service_id}/nodes][%d] postProvisioningV1ServicesServiceIdNodesNotFound  %+v", 404, o.Payload)
}
func (o *PostProvisioningV1ServicesServiceIDNodesNotFound) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesServiceIDNodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesServiceIDNodesInternalServerError creates a PostProvisioningV1ServicesServiceIDNodesInternalServerError with default headers values
func NewPostProvisioningV1ServicesServiceIDNodesInternalServerError() *PostProvisioningV1ServicesServiceIDNodesInternalServerError {
	return &PostProvisioningV1ServicesServiceIDNodesInternalServerError{}
}

/* PostProvisioningV1ServicesServiceIDNodesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostProvisioningV1ServicesServiceIDNodesInternalServerError struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesServiceIDNodesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services/{service_id}/nodes][%d] postProvisioningV1ServicesServiceIdNodesInternalServerError  %+v", 500, o.Payload)
}
func (o *PostProvisioningV1ServicesServiceIDNodesInternalServerError) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesServiceIDNodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
