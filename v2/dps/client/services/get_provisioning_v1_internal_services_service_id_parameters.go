// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProvisioningV1InternalServicesServiceIDParams creates a new GetProvisioningV1InternalServicesServiceIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProvisioningV1InternalServicesServiceIDParams() *GetProvisioningV1InternalServicesServiceIDParams {
	return &GetProvisioningV1InternalServicesServiceIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProvisioningV1InternalServicesServiceIDParamsWithTimeout creates a new GetProvisioningV1InternalServicesServiceIDParams object
// with the ability to set a timeout on a request.
func NewGetProvisioningV1InternalServicesServiceIDParamsWithTimeout(timeout time.Duration) *GetProvisioningV1InternalServicesServiceIDParams {
	return &GetProvisioningV1InternalServicesServiceIDParams{
		timeout: timeout,
	}
}

// NewGetProvisioningV1InternalServicesServiceIDParamsWithContext creates a new GetProvisioningV1InternalServicesServiceIDParams object
// with the ability to set a context for a request.
func NewGetProvisioningV1InternalServicesServiceIDParamsWithContext(ctx context.Context) *GetProvisioningV1InternalServicesServiceIDParams {
	return &GetProvisioningV1InternalServicesServiceIDParams{
		Context: ctx,
	}
}

// NewGetProvisioningV1InternalServicesServiceIDParamsWithHTTPClient creates a new GetProvisioningV1InternalServicesServiceIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProvisioningV1InternalServicesServiceIDParamsWithHTTPClient(client *http.Client) *GetProvisioningV1InternalServicesServiceIDParams {
	return &GetProvisioningV1InternalServicesServiceIDParams{
		HTTPClient: client,
	}
}

/* GetProvisioningV1InternalServicesServiceIDParams contains all the parameters to send to the API endpoint
   for the get provisioning v1 internal services service ID operation.

   Typically these are written to a http.Request.
*/
type GetProvisioningV1InternalServicesServiceIDParams struct {

	/* Detailed.

	   detailed
	*/
	Detailed *bool

	/* ServiceID.

	   Identifier for a services
	*/
	ServiceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get provisioning v1 internal services service ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProvisioningV1InternalServicesServiceIDParams) WithDefaults() *GetProvisioningV1InternalServicesServiceIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get provisioning v1 internal services service ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProvisioningV1InternalServicesServiceIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) WithTimeout(timeout time.Duration) *GetProvisioningV1InternalServicesServiceIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) WithContext(ctx context.Context) *GetProvisioningV1InternalServicesServiceIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) WithHTTPClient(client *http.Client) *GetProvisioningV1InternalServicesServiceIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDetailed adds the detailed to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) WithDetailed(detailed *bool) *GetProvisioningV1InternalServicesServiceIDParams {
	o.SetDetailed(detailed)
	return o
}

// SetDetailed adds the detailed to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) SetDetailed(detailed *bool) {
	o.Detailed = detailed
}

// WithServiceID adds the serviceID to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) WithServiceID(serviceID string) *GetProvisioningV1InternalServicesServiceIDParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get provisioning v1 internal services service ID params
func (o *GetProvisioningV1InternalServicesServiceIDParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProvisioningV1InternalServicesServiceIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Detailed != nil {

		// query param detailed
		var qrDetailed bool

		if o.Detailed != nil {
			qrDetailed = *o.Detailed
		}
		qDetailed := swag.FormatBool(qrDetailed)
		if qDetailed != "" {

			if err := r.SetQueryParam("detailed", qDetailed); err != nil {
				return err
			}
		}
	}

	// path param service_id
	if err := r.SetPathParam("service_id", o.ServiceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
