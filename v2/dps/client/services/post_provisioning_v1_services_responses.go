// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariadb-corporation/skysql-api-go/v2/dps/models"
)

// PostProvisioningV1ServicesReader is a Reader for the PostProvisioningV1Services structure.
type PostProvisioningV1ServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProvisioningV1ServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostProvisioningV1ServicesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostProvisioningV1ServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostProvisioningV1ServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostProvisioningV1ServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostProvisioningV1ServicesAccepted creates a PostProvisioningV1ServicesAccepted with default headers values
func NewPostProvisioningV1ServicesAccepted() *PostProvisioningV1ServicesAccepted {
	return &PostProvisioningV1ServicesAccepted{}
}

/* PostProvisioningV1ServicesAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostProvisioningV1ServicesAccepted struct {
	Payload *models.V1ServiceResponse
}

func (o *PostProvisioningV1ServicesAccepted) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services][%d] postProvisioningV1ServicesAccepted  %+v", 202, o.Payload)
}
func (o *PostProvisioningV1ServicesAccepted) GetPayload() *models.V1ServiceResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServiceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesBadRequest creates a PostProvisioningV1ServicesBadRequest with default headers values
func NewPostProvisioningV1ServicesBadRequest() *PostProvisioningV1ServicesBadRequest {
	return &PostProvisioningV1ServicesBadRequest{}
}

/* PostProvisioningV1ServicesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostProvisioningV1ServicesBadRequest struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesBadRequest) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services][%d] postProvisioningV1ServicesBadRequest  %+v", 400, o.Payload)
}
func (o *PostProvisioningV1ServicesBadRequest) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesUnauthorized creates a PostProvisioningV1ServicesUnauthorized with default headers values
func NewPostProvisioningV1ServicesUnauthorized() *PostProvisioningV1ServicesUnauthorized {
	return &PostProvisioningV1ServicesUnauthorized{}
}

/* PostProvisioningV1ServicesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostProvisioningV1ServicesUnauthorized struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services][%d] postProvisioningV1ServicesUnauthorized  %+v", 401, o.Payload)
}
func (o *PostProvisioningV1ServicesUnauthorized) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProvisioningV1ServicesInternalServerError creates a PostProvisioningV1ServicesInternalServerError with default headers values
func NewPostProvisioningV1ServicesInternalServerError() *PostProvisioningV1ServicesInternalServerError {
	return &PostProvisioningV1ServicesInternalServerError{}
}

/* PostProvisioningV1ServicesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostProvisioningV1ServicesInternalServerError struct {
	Payload *models.ErrrErrorResponse
}

func (o *PostProvisioningV1ServicesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /provisioning/v1/services][%d] postProvisioningV1ServicesInternalServerError  %+v", 500, o.Payload)
}
func (o *PostProvisioningV1ServicesInternalServerError) GetPayload() *models.ErrrErrorResponse {
	return o.Payload
}

func (o *PostProvisioningV1ServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrrErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
